AWSTemplateFormatVersion: 2010-09-09
Parameters:
  #------------------
  InstanceType:
    Description: (Optional) Instance type
    Type: String
    Default: t2.micro
  AmiId:
    Description: AMI ID
    Type: AWS::EC2::Image::Id
  AutoRecoveryMinutes:
    Description: (optional) Auto Recovery Time(Minutes)
    Type: Number
    Default: 1
Metadata: 
  AWS::CloudFormation::Interface: 
    ParameterGroups: 
      -
        Label:
          default:  Instances
        Parameters:
          - InstanceType
          - AmiId
          - AutoRecoveryMinutes
Resources:
  #---------------------------------------DockerBuild用インスタンス
  #--------IAM ROLE for WebServer(for ssm)
  Ec2Role:
    Type: "AWS::IAM::Role"
    Properties: 
      Path: "/"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryPowerUser
  Ec2RoleProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
        - !Ref Ec2Role
  #--------Security Group for WebServer
  SG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: FargatePoc-DockerInstanceSG
      GroupDescription: SG for Docker build instances.
      VpcId: 
        Fn::ImportValue: FargetePoC-DevVPC-VpcId
      Tags:
        - Key: Name
          Value: FargatePoc-DockerInstanceSG
  #------------------ WebServer:
  Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref AmiId
      InstanceType: !Ref InstanceType
      IamInstanceProfile: !Ref Ec2RoleProfile
      Monitoring: yes
      NetworkInterfaces:
        - DeviceIndex: '0'
          SubnetId:
            Fn::ImportValue: FargetePoC-DevVPC-Subnet1Id
          GroupSet:
            - !Ref SG
          AssociatePublicIpAddress: true
      Tags:
        - Key: Name
          Value: FargetePoC-DockerBuild
      UserData:
        Fn::Base64: 
          Fn::Join:
            - ""
            - - !Sub |
                #!/bin/bash -xe
                # Update ALL rpms, and change hostname to Userfrendly name 
                yum -y update
                hostnamectl set-hostname "FargetePoC-DockerBuild"
                #Dockerセットアップ
                sudo yum install -y docker
                sudo systemctl start docker
                sudo systemctl enable docker
                sudo usermod -a -G docker ec2-user
  InstanceRecovery:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: AutoRecovery for the Proxy
      Namespace: AWS/EC2
      MetricName: StatusCheckFailed_System
      Statistic: Minimum
      Period: 60
      EvaluationPeriods: !Ref AutoRecoveryMinutes
      ComparisonOperator: GreaterThanThreshold
      Threshold: 0
      AlarmActions:
      - !Sub "arn:aws:automate:${AWS::Region}:ec2:recover"
      - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:admin"
      Dimensions:
      - Name: InstanceId
        Value: !Ref Instance
Outputs:
  #---------------- EC2 Instance
  InstanceId:
    Description: Instance ID
    Value: !Ref Instance
    Export:
      Name: !Sub ${AWS::StackName}-InstanceId
  InstancePrivateIp:
    Description: Instance PrivateIP
    Value: !GetAtt Instance.PrivateIp
    Export:
      Name: !Sub ${AWS::StackName}-InstancePrivateIp