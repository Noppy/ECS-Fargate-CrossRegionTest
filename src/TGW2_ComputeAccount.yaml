AWSTemplateFormatVersion: 2010-09-09
Parameters:
  #------------------
  Tgw1Region:
    Type: "String"
  Tgw1Id:
    Type: "String"
  ComputeVPCCidr:
    Type: "String"
    MinLength: 9
    MaxLength: 18
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: Must be like 10.1.0.0/16
#----------------------------------------------
Resources:
  #------------------ Tgw2
  Tgw2:
    Type: AWS::EC2::TransitGateway
    Properties: 
      AmazonSideAsn: 64514
      AutoAcceptSharedAttachments: "enable"
      DefaultRouteTableAssociation: "disable"
      DefaultRouteTablePropagation: "disable"
      DnsSupport: "enable"
      Tags: 
        - Key: "Name"
          Value: "FargatePoC-TGW2"
  Tgw2RouteTable:
    Type: AWS::EC2::TransitGatewayRouteTable
    Properties: 
      TransitGatewayId: !Ref Tgw2
      Tags: 
        - Key: "Name"
          Value: "FargatePoC-Tgw2-RouteTable"
  #------------------　Attach VPC
  AttachEcrVpcToTgw2:
    Type: AWS::EC2::TransitGatewayAttachment
    Properties:
      TransitGatewayId: !Ref Tgw2
      VpcId:
        Fn::ImportValue: FargetePoC-EcrVPC-VpcId
      SubnetIds:
        - Fn::ImportValue: FargetePoC-EcrVPC-PublicSubnet1Id
        - Fn::ImportValue: FargetePoC-EcrVPC-PublicSubnet2Id
      Tags:
        - Key: "Name"
          Value: "FargetePoC-AttachEcrVpcToTgw2"
  AssociateTgw2RouteTableToEcrVPC:
    Type: AWS::EC2::TransitGatewayRouteTableAssociation
    Properties: 
      TransitGatewayAttachmentId: !Ref AttachEcrVpcToTgw2
      TransitGatewayRouteTableId: !Ref Tgw2RouteTable
  #PropagateEcrVPCCidrToTgw2RouteTable:
  #  Type: AWS::EC2::TransitGatewayRouteTablePropagation
  #  Properties: 
  #    TransitGatewayAttachmentId: !Ref AttachEcrVpcToTgw2
  #    TransitGatewayRouteTableId: !Ref Tgw2RouteTable
  AddDefaultRoute:
    Type: AWS::EC2::TransitGatewayRoute
    Properties: 
      DestinationCidrBlock: "0.0.0.0/0"
      TransitGatewayAttachmentId: !Ref AttachEcrVpcToTgw2
      TransitGatewayRouteTableId: !Ref Tgw2RouteTable
  #------------------　Attach TGW Peering, and add ComputeVpc route
  TgwInterRegionPeering:
    Type: AWS::EC2::TransitGatewayPeeringAttachment
    Properties: 
      TransitGatewayId: !Ref Tgw2
      PeerAccountId: !Ref AWS::AccountId
      PeerRegion: !Ref Tgw1Region
      PeerTransitGatewayId: !Ref Tgw1Id
      Tags: 
        - Key: "Name"
          Value: "FargetePoC-TgwInterRegionPeering"
  #------------------　Add routes to EcrVPC PrivateSubnet1 Route table. 
  #Add routes(EcrVPC)
  AddTgw2RouteToEcrVPCPrivateSubnet1RouteEcrVPC:
    DependsOn:
      - AttachEcrVpcToTgw2
    Type: "AWS::EC2::Route"
    Properties:
      RouteTableId:
        Fn::ImportValue: FargetePoC-EcrVPC-PrivateSubnet1RouteTableId
      DestinationCidrBlock: "0.0.0.0/0"
      TransitGatewayId: !Ref Tgw2
  #------------------　Add routes to EcrVPC PrivateSubnet2 Route table. 
  #Add routes(EcrVPC)
  AddTgw2RouteToEcrVPCPrivateSubnet2RouteEcrVPC:
    DependsOn:
      - AttachEcrVpcToTgw2
    Type: "AWS::EC2::Route"
    Properties:
      RouteTableId:
        Fn::ImportValue: FargetePoC-EcrVPC-PrivateSubnet2RouteTableId
      DestinationCidrBlock: "0.0.0.0/0"
      TransitGatewayId: !Ref Tgw2
#----------------------------------------------
Outputs:
  Tgw2Id:
    Description: Tgw2 ID
    Value: !Ref Tgw2
    Export:
      Name: !Sub ${AWS::StackName}-Tgw2Id
  Tgw2Arn:
    Description: Tgw2 ARN
    Value:
      Fn::Join:
          - ""
          - - "arn:aws:ec2:"
            - !Ref AWS::Region
            - ":"
            - !Ref AWS::AccountId
            - ":transit-gateway/"
            - !Ref Tgw2
    Export:
      Name: !Sub ${AWS::StackName}-Tgw2Arn
  Tgw2RouteTableId:
    Description: Tgw2 Route Table ID
    Value: !Ref Tgw2RouteTable
    Export:
      Name: !Sub ${AWS::StackName}-Tgw2RouteTableId
  TgwInterRegionPeeringAttachmentId:
    Value: !Ref TgwInterRegionPeering
    Export:
      Name: !Sub ${AWS::StackName}-TgwInterRegionPeeringAttachmentId

      